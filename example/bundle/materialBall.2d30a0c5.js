var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},a={},t={},n=e.parcelRequire5b70;null==n&&((n=function(e){if(e in a)return a[e].exports;if(e in t){var n=t[e];delete t[e];var i={id:e,exports:{}};return a[e]=i,n.call(i.exports,i,i.exports),i.exports}var r=new Error("Cannot find module '"+e+"'");throw r.code="MODULE_NOT_FOUND",r}).register=function(e,a){t[e]=a},e.parcelRequire5b70=n);var i=n("ilwiq"),r=n("RPVlj"),o=n("7lx9d"),s=n("5Rd1x"),l=n("4CEV9"),d=n("cVdfP"),m=n("891vQ"),c=n("kp7Te"),h=n("jiuw3");let u,g,p,C,f,y,b,w,v,R,S,T,I,M,F;const x={material1:{color:"#ffc766",emissive:"#000000",emissiveIntensity:1,roughness:.3,metalness:.8,ior:1.495,transmission:0,thinFilm:!1,attenuationColor:"#ffffff",attenuationDistance:.5,opacity:1,clearcoat:0,clearcoatRoughness:0,sheenColor:"#000000",sheenRoughness:0,iridescence:0,iridescenceIOR:1.5,iridescenceThickness:400,specularColor:"#ffffff",specularIntensity:1,matte:!1,castShadow:!0},material2:{color:"#db7157",emissive:"#000000",emissiveIntensity:1,roughness:.9,metalness:.1,transmission:0,thinFilm:!1,attenuationColor:"#ffffff",attenuationDistance:.5,ior:1.495,opacity:1,clearcoat:0,clearcoatRoughness:0,sheenColor:"#000000",sheenRoughness:0,iridescence:0,iridescenceIOR:1.5,iridescenceThickness:400,specularColor:"#ffffff",specularIntensity:1,matte:!1,castShadow:!0},material3:{color:"#000000",roughness:.1,metalness:.05,matte:!1},multipleImportanceSampling:!0,stableNoise:!1,denoiseEnabled:!0,denoiseSigma:2.5,denoiseThreshold:.1,denoiseKSigma:1,environmentIntensity:1,environmentRotation:0,environmentBlur:0,backgroundBlur:0,bounces:5,samplesPerFrame:1,acesToneMapping:!0,resolutionScale:1/window.devicePixelRatio,transparentTraversals:20,filterGlossyFactor:.5,tiles:1,backgroundAlpha:1,checkerboardTransparency:!0,cameraProjection:"Perspective"};window.location.hash.includes("transmission")?(x.material1.metalness=0,x.material1.roughness=.23,x.material1.transmission=1,x.material1.color="#ffffff",x.bounces=10,x.tiles=2):window.location.hash.includes("iridescent")?(x.material1.color="#474747",x.material1.roughness=.25,x.material1.metalness=1,x.material1.iridescence=1):window.location.hash.includes("acrylic")&&(x.material1.color="#ffffff",x.material1.roughness=0,x.material1.metalness=0,x.material1.transmission=1,x.material1.attenuationDistance=.75,x.material1.attenuationColor="#2a6dc6",x.material2.color="#ffffff",x.material2.roughness=0,x.material2.metalness=.975,x.material3.color="#999999",x.material3.roughness=.2,x.material3.metalness=0,x.bounces=20,x.tiles=3);function k(){const e=window.innerWidth,a=window.innerHeight,t=x.resolutionScale,n=window.devicePixelRatio;C.setSize(e*t*n,a*t*n),C.reset(),u.setSize(e,a),u.setPixelRatio(window.devicePixelRatio*t);const i=e/a;v.aspect=i,v.updateProjectionMatrix();const r=5/i;R.top=r/2,R.bottom=r/-2,R.updateProjectionMatrix()}function P(){C.reset()}function A(){const e=I.generate(T,x.environmentBlur);C.material.envMapInfo.updateFrom(e),M.environment=e,C.reset()}function B(e){"Perspective"===e?(f&&v.position.copy(f.position),f=v):"Orthographic"===e?(f&&R.position.copy(f.position),f=R):(f&&S.position.copy(f.position),f=S),g.object=f,C.camera=f,g.update(),P()}function E(){requestAnimationFrame(E);const e=w[0];e.color.set(x.material1.color).convertSRGBToLinear(),e.emissive.set(x.material1.emissive).convertSRGBToLinear(),e.emissiveIntensity=x.material1.emissiveIntensity,e.metalness=x.material1.metalness,e.roughness=x.material1.roughness,e.transmission=x.material1.transmission,e.attenuationDistance=x.material1.thinFilm?1/0:x.material1.attenuationDistance,e.attenuationColor.set(x.material1.attenuationColor),e.ior=x.material1.ior,e.opacity=x.material1.opacity,e.clearcoat=x.material1.clearcoat,e.clearcoatRoughness=x.material1.clearcoatRoughness,e.sheenColor.set(x.material1.sheenColor).convertSRGBToLinear(),e.sheenRoughness=x.material1.sheenRoughness,e.iridescence=x.material1.iridescence,e.iridescenceIOR=x.material1.iridescenceIOR,e.iridescenceThicknessRange=[0,x.material1.iridescenceThickness],e.specularColor.set(x.material1.specularColor).convertSRGBToLinear(),e.specularIntensity=x.material1.specularIntensity,e.transparent=e.opacity<1;const a=w[1];a.color.set(x.material2.color).convertSRGBToLinear(),a.emissive.set(x.material2.emissive).convertSRGBToLinear(),a.emissiveIntensity=x.material2.emissiveIntensity,a.metalness=x.material2.metalness,a.roughness=x.material2.roughness,a.transmission=x.material2.transmission,a.attenuationDistance=x.material2.thinFilm?1/0:x.material2.attenuationDistance,a.attenuationColor.set(x.material2.attenuationColor),a.ior=x.material2.ior,a.opacity=x.material2.opacity,a.clearcoat=x.material2.clearcoat,a.clearcoatRoughness=x.material2.clearcoatRoughness,a.sheenColor.set(x.material2.sheenColor).convertSRGBToLinear(),a.sheenRoughness=x.material2.sheenRoughness,a.iridescence=x.material2.iridescence,a.iridescenceIOR=x.material2.iridescenceIOR,a.iridescenceThicknessRange=[0,x.material2.iridescenceThickness],a.specularColor.set(x.material2.specularColor).convertSRGBToLinear(),a.specularIntensity=x.material2.specularIntensity,a.transparent=a.opacity<1;const t=w[2];t.color.set(x.material3.color).convertSRGBToLinear(),t.metalness=x.material3.metalness,t.roughness=x.material3.roughness,t.transparent=t.opacity<1,C.material.materials.updateFrom(p.materials,p.textures),C.material.materials.setMatte(0,x.material1.matte),C.material.materials.setMatte(1,x.material2.matte),C.material.materials.setMatte(2,x.material3.matte),C.material.materials.setCastShadow(0,x.material1.castShadow),C.material.materials.setCastShadow(1,x.material2.castShadow),C.material.filterGlossyFactor=x.filterGlossyFactor,C.material.environmentIntensity=x.environmentIntensity,C.material.backgroundBlur=x.backgroundBlur,C.material.bounces=x.bounces,C.material.backgroundAlpha=x.backgroundAlpha,C.material.physicalCamera.updateFrom(f),f.updateMatrixWorld(),x.backgroundAlpha<1?M.background=null:M.background=M.environment;for(let e=0,a=x.samplesPerFrame;e<a;e++)C.update();C.samples<1&&u.render(M,f),b.material.sigma=x.denoiseSigma,b.material.threshold=x.denoiseThreshold,b.material.kSigma=x.denoiseKSigma;const n=x.denoiseEnabled?b:y;u.autoClear=!1,n.material.map=C.target.texture,n.render(u),u.autoClear=!0,F.innerText=`Samples: ${Math.floor(C.samples)}`}window.innerWidth/window.innerHeight<.65&&(x.bounces=Math.max(x.bounces,6),x.resolutionScale*=.5,x.tiles=2,x.multipleImportanceSampling=!1,x.environmentBlur=.35),async function(){u=new i.WebGLRenderer({antialias:!0}),u.toneMapping=i.ACESFilmicToneMapping,u.outputEncoding=i.sRGBEncoding,u.setClearColor(0,0),document.body.appendChild(u.domElement);const e=window.innerWidth/window.innerHeight;v=new l.PhysicalCamera(75,e,.025,500),v.position.set(-4,2,3);const a=5/e;R=new i.OrthographicCamera(-2.5,2.5,a/2,a/-2,0,100),R.position.set(-4,2,3),S=new l.EquirectCamera,S.position.set(-4,2,3),C=new l.PathTracingRenderer(u),C.alpha=!0,C.material=new l.PhysicalPathTracingMaterial,C.material.setDefine("TRANSPARENT_TRAVERSALS",x.transparentTraversals),C.material.setDefine("FEATURE_MIS",Number(x.multipleImportanceSampling)),C.tiles.set(x.tiles,x.tiles),y=new r.FullScreenQuad(new i.MeshBasicMaterial({map:C.target.texture,blending:i.CustomBlending,premultipliedAlpha:u.getContextAttributes().premultipliedAlpha})),b=new r.FullScreenQuad(new l.DenoiseMaterial({map:C.target.texture,blending:i.CustomBlending,premultipliedAlpha:u.getContextAttributes().premultipliedAlpha})),g=new s.OrbitControls(v,u.domElement),g.addEventListener("change",(()=>{C.reset()})),M=new i.Scene,F=document.getElementById("samples"),I=new l.BlurredEnvMapGenerator(u);const t=(new m.RGBELoader).loadAsync("https://raw.githubusercontent.com/mrdoob/three.js/dev/examples/textures/equirectangular/royal_esplanade_1k.hdr").then((e=>{T=e,A()})),n=new d.PathTracingSceneWorker,f=(new o.GLTFLoader).setMeshoptDecoder(c.MeshoptDecoder).loadAsync("https://raw.githubusercontent.com/gkjohnson/3d-demo-data/main/models/material-balls/material_ball_v2.glb").then((e=>{const a=new i.Group;e.scene.scale.setScalar(.01),e.scene.updateMatrixWorld(),a.add(e.scene);const t=new i.Box3;t.setFromObject(e.scene);const r=new i.Mesh(new i.CylinderGeometry(3,3,.05,200),new i.MeshPhysicalMaterial({color:16777215,roughness:0,metalness:.25}));r.geometry=r.geometry.toNonIndexed(),r.geometry.clearGroups(),r.position.y=t.min.y-.03,a.add(r);const o=new i.MeshPhysicalMaterial,s=new i.MeshPhysicalMaterial;return e.scene.traverse((e=>{e.geometry&&e.geometry.computeVertexNormals(),"Sphere_1"===e.name?e.material=s:e.material=o,"subsphere_1"===e.name&&(e.material=s)})),w=[o,s,r.material],n.generate(a)})).then((e=>{p=e,M.add(e.scene);const{bvh:a,textures:t,materials:i}=e,r=a.geometry,o=C.material;o.bvh.updateFrom(a),o.normalAttribute.updateFrom(r.attributes.normal),o.tangentAttribute.updateFrom(r.attributes.tangent),o.uvAttribute.updateFrom(r.attributes.uv),o.materialIndexAttribute.updateFrom(r.attributes.materialIndex),o.textures.setTextures(u,2048,2048,t),o.materials.updateFrom(i,t),n.dispose()}));await Promise.all([f,t]),document.getElementById("loading").remove(),document.body.classList.add("checkerboard"),k(),window.addEventListener("resize",k);const G=new h.GUI;B(x.cameraProjection);const D=G.addFolder("Path Tracing");D.add(x,"acesToneMapping").onChange((e=>{u.toneMapping=e?i.ACESFilmicToneMapping:i.NoToneMapping,y.material.needsUpdate=!0})),D.add(x,"stableNoise").onChange((e=>{C.stableNoise=e})),D.add(x,"multipleImportanceSampling").onChange((e=>{C.material.setDefine("FEATURE_MIS",Number(e)),C.reset()})),D.add(x,"tiles",1,4,1).onChange((e=>{C.tiles.set(e,e)})),D.add(x,"samplesPerFrame",1,10,1),D.add(x,"filterGlossyFactor",0,1).onChange((()=>{C.reset()})),D.add(x,"bounces",1,30,1).onChange((()=>{C.reset()})),D.add(x,"transparentTraversals",0,40,1).onChange((e=>{C.material.setDefine("TRANSPARENT_TRAVERSALS",e),C.reset()})),D.add(x,"resolutionScale",.1,1).onChange((()=>{k()}));const L=G.addFolder("Denoising");L.add(x,"denoiseEnabled"),L.add(x,"denoiseSigma",.01,12),L.add(x,"denoiseThreshold",.01,1),L.add(x,"denoiseKSigma",0,12),L.close();const O=G.addFolder("Environment");O.add(x,"environmentIntensity",0,10).onChange((()=>{C.reset()})),O.add(x,"environmentRotation",0,2*Math.PI).onChange((e=>{C.material.environmentRotation.setFromMatrix4((new i.Matrix4).makeRotationY(e)),C.reset()})),O.add(x,"environmentBlur",0,1).onChange((()=>{A()})),O.add(x,"backgroundBlur",0,1).onChange((()=>{C.reset()})),O.add(x,"backgroundAlpha",0,1).onChange((()=>{C.reset()})),O.add(x,"checkerboardTransparency").onChange((e=>{e?document.body.classList.add("checkerboard"):document.body.classList.remove("checkerboard")})),O.close();const N=G.addFolder("Camera");N.add(x,"cameraProjection",["Perspective","Orthographic","Equirectangular"]).onChange((e=>{B(e)})),N.add(v,"focusDistance",1,100).onChange(P),N.add(v,"apertureBlades",0,10,1).onChange((function(e){v.apertureBlades=0===e?0:Math.max(e,3),this.updateDisplay(),P()})),N.add(v,"apertureRotation",0,12.5).onChange(P),N.add(v,"anamorphicRatio",.1,10).onChange(P),N.add(v,"bokehSize",0,50).onChange(P).listen(),N.add(v,"fStop",.3,20).onChange(P).listen(),N.add(v,"fov",25,100).onChange((()=>{v.updateProjectionMatrix(),P()})).listen(),N.close();const j=G.addFolder("Shell Material");j.addColor(x.material1,"color").onChange(P),j.addColor(x.material1,"emissive").onChange(P),j.add(x.material1,"emissiveIntensity",0,50,.01).onChange(P),j.add(x.material1,"roughness",0,1).onChange(P),j.add(x.material1,"metalness",0,1).onChange(P),j.add(x.material1,"opacity",0,1).onChange(P),j.add(x.material1,"transmission",0,1).onChange(P),j.add(x.material1,"thinFilm",0,1).onChange(P),j.add(x.material1,"attenuationDistance",.05,2).onChange(P),j.addColor(x.material1,"attenuationColor").onChange(P),j.add(x.material1,"ior",.9,3).onChange(P),j.add(x.material1,"clearcoat",0,1).onChange(P),j.add(x.material1,"clearcoatRoughness",0,1).onChange(P),j.addColor(x.material1,"sheenColor").onChange(P),j.add(x.material1,"sheenRoughness",0,1).onChange(P),j.add(x.material1,"iridescence",0,1).onChange(P),j.add(x.material1,"iridescenceIOR",.1,3).onChange(P),j.add(x.material1,"iridescenceThickness",0,1200).onChange(P),j.addColor(x.material1,"specularColor").onChange(P),j.add(x.material1,"specularIntensity",0,1).onChange(P),j.add(x.material1,"matte").onChange(P),j.add(x.material1,"castShadow").onChange(P),j.close();const _=G.addFolder("Ball Material");_.addColor(x.material2,"color").onChange(P),_.addColor(x.material2,"emissive").onChange(P),_.add(x.material2,"emissiveIntensity",0,50,.01).onChange(P),_.add(x.material2,"roughness",0,1).onChange(P),_.add(x.material2,"metalness",0,1).onChange(P),_.add(x.material2,"opacity",0,1).onChange(P),_.add(x.material2,"transmission",0,1).onChange(P),j.add(x.material2,"thinFilm",0,1).onChange(P),_.add(x.material2,"attenuationDistance",.05,2).onChange(P),_.addColor(x.material2,"attenuationColor").onChange(P),_.add(x.material2,"ior",.9,3).onChange(P),_.add(x.material2,"clearcoat",0,1).onChange(P),_.add(x.material2,"clearcoatRoughness",0,1).onChange(P),_.addColor(x.material2,"sheenColor").onChange(P),_.add(x.material2,"sheenRoughness",0,1).onChange(P),_.add(x.material2,"iridescence",0,1).onChange(P),_.add(x.material2,"iridescenceIOR",.1,3).onChange(P),_.add(x.material2,"iridescenceThickness",0,1200).onChange(P),_.addColor(x.material2,"specularColor").onChange(P),_.add(x.material2,"specularIntensity",0,1).onChange(P),_.add(x.material2,"matte").onChange(P),_.add(x.material2,"castShadow").onChange(P),_.close();const q=G.addFolder("Floor Material");q.addColor(x.material3,"color").onChange(P),q.add(x.material3,"roughness",0,1).onChange(P),q.add(x.material3,"metalness",0,1).onChange(P),q.add(x.material3,"matte").onChange(P),q.close(),E()}();
//# sourceMappingURL=materialBall.2d30a0c5.js.map
