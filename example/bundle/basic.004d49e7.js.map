{"mappings":"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","sources":["example/basic.js"],"sourcesContent":["import * as THREE from 'three';\nimport { FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { PathTracingRenderer, PhysicalPathTracingMaterial, PhysicalCamera } from '../src/index.js';\nimport { PathTracingSceneWorker } from '../src/workers/PathTracingSceneWorker.js';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader.js';\n\nlet renderer, controls, pathTracer, blitQuad, camera, scene, samplesEl;\n\nlet tiles = 1;\nlet resolutionScale = 1;\n\n// adjust performance parameters for mobile\nconst aspectRatio = window.innerWidth / window.innerHeight;\nif ( aspectRatio < 0.65 ) {\n\n\tresolutionScale *= 0.5;\n\ttiles = 2;\n\n}\n\ninit();\n\nasync function init() {\n\n\tsamplesEl = document.getElementById( 'samples' );\n\n\t// init renderer, camera, controls, scene\n\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\trenderer.toneMapping = THREE.ACESFilmicToneMapping;\n\trenderer.outputEncoding = THREE.sRGBEncoding;\n\trenderer.setClearColor( 0, 0 );\n\tdocument.body.appendChild( renderer.domElement );\n\n\tcamera = new PhysicalCamera( 75, 1, 0.025, 500 );\n\tcamera.position.set( 8, 9, 24 );\n\n\tcontrols = new OrbitControls( camera, renderer.domElement );\n\tcontrols.target.y = 10;\n\tcontrols.update();\n\n\tscene = new THREE.Scene();\n\n\t// init path tracer\n\tpathTracer = new PathTracingRenderer( renderer );\n\tpathTracer.material = new PhysicalPathTracingMaterial();\n\tpathTracer.material.filterGlossyFactor = 0.5;\n\tpathTracer.material.backgroundBlur = 0.05;\n\tpathTracer.tiles.set( tiles, tiles );\n\tpathTracer.camera = camera;\n\n\tblitQuad = new FullScreenQuad( new THREE.MeshBasicMaterial( {\n\t\tmap: pathTracer.target.texture,\n\t\tblending: THREE.CustomBlending,\n\t} ) );\n\n\tcontrols.addEventListener( 'change', () => {\n\n\t\tpathTracer.reset();\n\n\t} );\n\n\t// load the envmap and model\n\tconst envMapPromise = new RGBELoader()\n\t\t.loadAsync( 'https://raw.githubusercontent.com/gkjohnson/3d-demo-data/master/hdri/chinese_garden_1k.hdr' )\n\t\t.then( texture => {\n\n\t\t\ttexture.mapping = THREE.EquirectangularReflectionMapping;\n\t\t\tscene.background = texture;\n\t\t\tscene.environment = texture;\n\t\t\tpathTracer.material.envMapInfo.updateFrom( texture );\n\n\t\t} );\n\n\tconst generator = new PathTracingSceneWorker();\n\tconst gltfPromise = new GLTFLoader()\n\t\t.loadAsync( 'https://raw.githubusercontent.com/gkjohnson/3d-demo-data/main/models/terrarium-robots/scene.gltf' )\n\t\t.then( gltf => {\n\n\t\t\treturn generator.generate( gltf.scene );\n\n\t\t} )\n\t\t.then( result => {\n\n\t\t\tscene.add( result.scene );\n\n\t\t\tconst { bvh, textures, materials } = result;\n\t\t\tconst geometry = bvh.geometry;\n\t\t\tconst material = pathTracer.material;\n\n\t\t\tmaterial.bvh.updateFrom( bvh );\n\t\t\tmaterial.normalAttribute.updateFrom( geometry.attributes.normal );\n\t\t\tmaterial.tangentAttribute.updateFrom( geometry.attributes.tangent );\n\t\t\tmaterial.uvAttribute.updateFrom( geometry.attributes.uv );\n\t\t\tmaterial.materialIndexAttribute.updateFrom( geometry.attributes.materialIndex );\n\t\t\tmaterial.textures.setTextures( renderer, 2048, 2048, textures );\n\t\t\tmaterial.materials.updateFrom( materials, textures );\n\n\t\t\tgenerator.dispose();\n\n\t\t} );\n\n\t// wait for the scene to be rady\n\tawait Promise.all( [ gltfPromise, envMapPromise ] );\n\n\tdocument.getElementById( 'loading' ).remove();\n\twindow.addEventListener( 'resize', onResize );\n\n\tonResize();\n\tanimate();\n\n}\n\nfunction onResize() {\n\n\t// update rendering resolution\n\tconst w = window.innerWidth;\n\tconst h = window.innerHeight;\n\tconst scale = resolutionScale;\n\tconst dpr = window.devicePixelRatio;\n\n\tpathTracer.setSize( w * scale * dpr, h * scale * dpr );\n\tpathTracer.reset();\n\n\trenderer.setSize( w, h );\n\trenderer.setPixelRatio( window.devicePixelRatio * scale );\n\n\tconst aspect = w / h;\n\tcamera.aspect = aspect;\n\tcamera.updateProjectionMatrix();\n\n}\n\nfunction animate() {\n\n\trequestAnimationFrame( animate );\n\n\tcamera.updateMatrixWorld();\n\tpathTracer.update();\n\n\tif ( pathTracer.samples < 1 ) {\n\n\t\trenderer.render( scene, camera );\n\n\t}\n\n\trenderer.autoClear = false;\n\tblitQuad.material.map = pathTracer.target.texture;\n\tblitQuad.render( renderer );\n\trenderer.autoClear = true;\n\n\tsamplesEl.innerText = `Samples: ${ Math.floor( pathTracer.samples ) }`;\n\n}\n"],"names":["$ilwiq","parcelRequire","$dfcb81d2867cd445$var$renderer","$dfcb81d2867cd445$var$controls","$dfcb81d2867cd445$var$pathTracer","$dfcb81d2867cd445$var$blitQuad","$dfcb81d2867cd445$var$camera","$dfcb81d2867cd445$var$scene","$dfcb81d2867cd445$var$samplesEl","$dfcb81d2867cd445$var$tiles","$dfcb81d2867cd445$var$resolutionScale","$dfcb81d2867cd445$var$onResize","w","window","innerWidth","h","innerHeight","scale","dpr","devicePixelRatio","setSize","reset","setPixelRatio","aspect","updateProjectionMatrix","$dfcb81d2867cd445$var$animate","requestAnimationFrame","updateMatrixWorld","update","samples","render","autoClear","material","map","target","texture","innerText","Math","floor","async","document","getElementById","WebGLRenderer","antialias","toneMapping","ACESFilmicToneMapping","outputEncoding","sRGBEncoding","setClearColor","body","appendChild","domElement","$4CEV9","PhysicalCamera","position","set","$5Rd1x","OrbitControls","y","Scene","PathTracingRenderer","PhysicalPathTracingMaterial","filterGlossyFactor","backgroundBlur","tiles","camera","$RPVlj","FullScreenQuad","MeshBasicMaterial","blending","CustomBlending","addEventListener","envMapPromise","$891vQ","RGBELoader","loadAsync","then","mapping","EquirectangularReflectionMapping","background","environment","envMapInfo","updateFrom","generator","$cVdfP","PathTracingSceneWorker","gltfPromise","$7lx9d","GLTFLoader","gltf","generate","scene","result","add","bvh","textures","materials","geometry","normalAttribute","attributes","normal","tangentAttribute","tangent","uvAttribute","uv","materialIndexAttribute","materialIndex","setTextures","dispose","Promise","all","remove","$dfcb81d2867cd445$var$init"],"version":3,"file":"basic.004d49e7.js.map"}